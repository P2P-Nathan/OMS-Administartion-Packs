<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><TypeDefinitions>
    <ModuleTypes>
      <WriteActionModuleType ID="P2P.OMSAdministration.Tasks.ScheduledInstallAction" Accessibility="Public" Batching="false">
        <Configuration>
          <xsd:element name="MPName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="InstallDateTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="InstallationDateTime" Selector="$Config/InstallDateTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <WriteAction ID="RunPS" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction">
                <ScriptName>GenerateOMSPacks.PS1</ScriptName>
                <ScriptBody>param([DateTime]$InstallDate,[String]$MPName)

[datetime]$run  = [system.Datetime]::Parse($InstallDate)
$expire = $run.AddSeconds(1).ToString('s')
$action = New-ScheduledTaskAction -Execute 'Powershell.exe' -Argument '-NoProfile -WindowStyle Hidden -command "&amp; {Write-EventLog -LogName ''OMS Admin Extensions'' -Source OMSAdminSetup -EntryType Information -EventId 7102 -Message "Install AntiMalware" -Category 60}"'
$trigger = New-ScheduledTaskTrigger -At $run -Once
$settings = New-ScheduledTaskSettingsSet
$settings.DeleteExpiredTaskAfter = "PT0S"
$task = New-ScheduledTask -Action $action -Trigger $trigger -Settings $settings -Description "This task will install the $MPName at the scheduled time"
$task.Triggers[0].EndBoundary = $expire
Register-ScheduledTask -TaskName "Install $MPName on Schedule" -TaskPath "\" -InputObject $task</ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>InstallDate</Name>
                    <Value>$Config/InstallDateTime$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>MPName</Name>
                    <Value>$Config/MPName$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>300</TimeoutSeconds>
              </WriteAction>
            </MemberModules>
            <Composition>
              <Node ID="RunPS" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <InputType>System!System.BaseData</InputType>
      </WriteActionModuleType>
    </ModuleTypes>
  </TypeDefinitions></ManagementPackFragment>
